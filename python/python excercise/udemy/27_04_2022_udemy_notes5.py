# -*- coding: utf-8 -*-
"""27.04.2022 udemy notes5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dc5xoxX23eQoBGw-ZJQVKmXkedj1ocPF
"""

print("""***************************
Kullanıcı Girişi
***************************
""")


sys_kullanıcı_adı = "AAsuman"
sys_parola = "12345"
kullanıcı_adı = input("Kullanıcı Adı:")
parola = input("Parola:")
if (kullanıcı_adı == sys_kullanıcı_adı and sys_parola != parola):
  print("Parola Hatalı...")
elif (kullanıcı_adı != sys_kullanıcı_adı and parola == sys_parola):
  print("Kullanıcı Adı Hatalı...")
elif (kullanıcı_adı != sys_kullanıcı_adı and parola != sys_parola):
  print("Kullanıcı Adı ve Parola Hatalı....")
else:
  print('Sisteme Başarılı ile Giriş Yapıldı....')

# Problem 1
# Kullanıcıdan alınan boy ve kilo değerlerine göre beden kitle indeksini hesaplayın ve şu kurallara göre ekrana şu yazıları yazdırın.
#  Beden Kitle İndeksi: Kilo / Boy(m) *  Boy(m)
#  BKİ 18.5'un altındaysa -------> Zayıf
#  BKİ 18.5 ile 25 arasındaysa ------> Normal
#  BKİ 25 ile 30 arasındaysa --------> Fazla Kilolu
#  BKİ 30'un üstündeyse -------------> Obez

Kilo = float(input("Kilonuzu Giriniz: "))
Boy = float(input("Boyunuzu Giriniz: "))
BKİ = Kilo/(Boy*Boy)

if BKİ < 18.5:
  print("BKİ verilerine göre ZAYIF grubundasınız :) ")
elif 25 > BKİ >= 18.5:
  print("BKİ verilerine göre NORMAL grubundasınız :) ")
elif 30> BKİ >=25:
  print("BKİ verilerine göre FAZLA KİLOLU grubundasınız :( ")
else:
  print("BKİ verilerien göre OBEZ grubundasınız :( ")

#HOCANIN ÇÖZÜMÜ
boy = float(input("Boyunuzu Giriniz:"))
kilo = int(input("Kilonuzu Giriniz:"))

bki =  kilo / (boy ** 2)

if (bki < 18.5):
    print("Zayıf")
elif (bki >= 18.5 and bki < 25):
    print("Normal")
elif (bki >= 25 and bki < 30):
    print("Fazla Kilolu")
else:
    print("Obez")

# Problem 2
# Kullanıcıdan 3 tane sayı alın ve en büyük sayıyı ekrana yazdırın.
a = int(input('a:'))
b = int(input('b:'))
c = int(input('c:'))

if a >= b and a >= c:
  print("Girilen en büyük sayı:", a)
elif b >= a and b >= c:
  print('Girilen en büyük sayı.', b) 
else :
  print('Girilen en büyük sayı.', c)

# HOCANIN ÇÖZÜMÜ: 
a =  int(input("a:"))
b = int(input("b:"))
c = int(input("c:"))

if (a >= b and a >= c):
    print("En büyük sayı:",a)
elif (b >= a and b >= c):
    print("En büyük sayı:",b)
elif (c >= a and c >= b):
    print("En büyük sayı:",c)

# Problem 3
# Kullanıcının girdiği vize1,vize2,final notlarına notlarına göre harf notunu hesaplayın.
#     Vize1 toplam notun %30'una etki edecek.
#     Vize2 toplam notun %30'una etki edecek.
#     Final toplam notun %40'ına etki edecek.
#     Toplam Not >=  90 -----> AA
#     Toplam Not >=  85 -----> BA
#     Toplam Not >=  80 -----> BB
#     Toplam Not >=  75 -----> CB
#     Toplam Not >=  70 -----> CC
#     Toplam Not >=  65 -----> DC
#     Toplam Not >=  60 -----> DD
#     Toplam Not >=  55 -----> FD
#     # Toplam Not <  55 -----> FF

vize1 = int(input('vize1:'))
vize2 = int(input('vize2:'))
final = int(input('final'))
sonuc = (vize1*30)//100 + (vize2*30)//100 + (final*40)//100

if sonuc >= 90:
  print("AA")
elif sonuc >= 85:
  print('BA')
elif sonuc >= 80:
  print('BB')
elif sonuc >= 75:
  print('CB')
elif sonuc >= 70:
  print('CC')
elif sonuc >= 65:
  print('DC')
elif sonuc >= 60:
  print('DD')
elif sonuc >= 55:
  print('FD')
else:
  print('FF')

# Problem 4
# Şimdi de geometrik şekil hesaplama işlemi yapalım. İlk olarak kullanıcıdan üçgenin mi dörtgenin mi tipini bulmak istediğini soralım.
# Eğer kullanıcı "Dörtgen" cevabını verirse , 4 tane kenar isteyip bu dörtgenin kare mi , dikdörtgen mi yoksa sıradan bir dörtgen mi olduğunu bulmaya çalışalım.
# Eğer kullanıcı "Üçgen" cevabını verirse , 3 tane kenar isteyip bu üçgenin ikizkenar mı , eşkenar mı yoksa sıradan bir üçgen mi olduğunu bulmaya çalışalım.
# Eğer verilen kenarlar bir üçgen belirtmiyorsa, ekrana "Üçgen belirtmiyor" şeklinde bir yazı yazalım.
# Ayrıca , bu problemde mutlak değer bulmaya ihtiyacınız olacak. Bunun için, Pythonda hazır bir fonksiyon olan abs() fonksiyonunu kullanabilirsiniz. 
# abs(-4)
# 4
# abs(5)
# 5


şekil = input('Hangi Şeklin tipini öğrenmek istiyorsunuz; Üçgen mi , Dörtgen mi:')

if (şekil == 'Dörtgen'):
  print('Kenarları sırayla giriniz:')
  a = input('1.kenar:')
  b = input('2.kenar:')
  c = input('3.kenar:')
  d = input('4.kenar:')
  if (a == b == c == d):
    print('şekil kare')
  elif (a == c and b == d):
    print('şekil dikdörtgen')
  else:
    print('şekil dörtgen')

elif (şekil == 'Üçgen'):
  print('Kenarları sırayla giriniz:')
  a = input('1.kenar:')
  b = input('2.kenar:')
  c = input('3.kenar:')
  if (a == c == b):
    print('şekil eşkenar üçgen')
  elif (a == c or a == b or b == c):
    print('şekil ikizkenar üçgen')
  else:
    print('şekil çeşitkenar üçgen')
else:
  print('Şekil belirtilmedi...')

# HOCANIN ÇÖZÜMÜ:
şekil =  input("Hangi şeklin tipini öğrenmek istiyorsunuz?")

if (şekil == "Dörtgen"):
    print("Lütfen kenarları sırayla giriniz.")
    a = int(input("Kenar-1:"))
    b = int(input("Kenar-2:"))
    c = int(input("Kenar-3:"))
    d = int(input("Kenar-4:"))
    
    if (a == b and a == c and a == d):
        print("Kare")
    elif (a == c and b == d):
        print("Dikdörtgen")
    else:
        print("Dörtgen")
        
        
elif (şekil == "Üçgen"):
    a = int(input("Kenar-1:"))
    b = int(input("Kenar-2:"))
    c = int(input("Kenar-3:"))
    if ( abs(a+b) > c and abs(a+c) > b and abs(b+c) > a):
        if (a == b and a == c ):
            print("Eşkenar Üçgen...")
        elif ((a == b and a != c) or (a == c and a != b) or (b == c and b != a)):
            print("İkizkenar Üçgen....")
        else:
            print("Çeşitkenar Üçgen...")
    else:
        print("Üçgen belirtmiyor...")
        
else:
    print("Geçersiz Şekil...")

cevap = input("dörtgen:1/üçgen:2")
if cevap == "1":
    bir, iki, üç, dört = float(input("1:")), float(input("2:")), float(input("3:")), float(input("4:"))
    if bir == iki == üç == dört:
        print("kare")
    elif bir == iki and üç == dört or bir == üç and iki == dört:
        print("dikdörtgen")
    else:
        print("sıradan dörtgen")
if cevap == "2":
    bir, iki, üç = float(input("1:")), float(input("2:")), float(input("3:"))
    if ((abs(iki-üç)<bir) and bir < iki+üç) and ((abs(bir-üç)<iki) and iki < bir+üç)\
    and ((abs(iki-bir)<üç) and üç < iki+bir):
        if bir == iki == üç:
            print("eşkanar üçgen")
        elif bir == iki or iki == üç:
            print("ikizkenar üçgen")
        elif bir**2 == iki**2 + üç**2 or iki**2 == bir**2 + üç**2 or üç**2 == iki**2 + bir**2:
            print("dik üçgen")
        else:
            print("çeşitkenar üçgen")
    else:
        print("üçgen belirtmiyor")

ucgen_mi = input("Üçgen mi dörtgen mi ? ").lower()

if ucgen_mi == "dörtgen":
   print("Dörtgenin kenarlarını giriniz: ")
   a = int(input("a: "))
   b = int(input("b: "))
   c = int(input("c: "))
   d = int(input("d: "))
   dörtgen_kenarlar = [a, b, c, d]
   dörtgen_kenarlar.sort()
   if a == b and c == d:
     print("Bu bir karedir")
   elif dörtgen_kenarlar[0] == dörtgen_kenarlar[1] and dörtgen_kenarlar[0] == dörtgen_kenarlar[1]:
     print("Bu bir dikdörtgendir")
   else:
     print("Bu normal bir dörtgendir")
elif ucgen_mi == "üçgen":
     print("Üçgenin kenarlarını giriniz: ")
     x = int(input("x: "))
     y = int(input("y: "))
     z = int(input("z: "))
     if x == y == z:
     	print("Bu bir eşkenar üçgen")
     elif x==y or y==z or z==x:
     	print("Bu bir ikizkenar üçgen")
     else:
     	print("Bu bir çeşitkenar üçgen")

# DÖNGÜ YAPILARINI KULLANMA;
# Şuana kadar yazılan programlar bir kez çalışıyor ve sona eriyordu. Ancak biz çoğu zaman programlarımızın belli koşullarda çalışmasını sürekli devam ettirmesini
# ve işlemlerini sürekli tekrar etmesini isteriz. işte bunlara yapmamızı sağlayan yapılara da DÖNGÜ diyoruz.
# Döngüler bütün programlama dilllerinde bulunan ve belli koşullarda işlemlerini sürekli tekrar eden yapılardır. 
# örnek verecek olursak ATM ye gidip KARTI TAKTIĞIMIZ AN PROGRAM BAŞLIYOR; para çekme, yatırma, vergi ödeme gibi bir dizi işlem sonunda KART İADE 
# ye basılmadıkça döngü devam ediyor ve program sona ermiyor.

# FOR DÖNGÜLERİ; Bu konuya geçmeden önce bilmemiz gereken diğer bir konu ise İN OPERATÖRÜDÜR.
# İN OPERATÖRÜ; in operatörü; bir elemanın başka bir listede , demette veya stringte (karakter dizeleri) bulunup bulunmadığını kontrol eder. 
# kullanım şekli şöyledir;

"a" in 'merhaba'

'mer' in 'merhaba'

't' in 'merhaba'

4 in [1, 2, 3, 4]

5 in [1, 2, 3, 4]

4 in (1, 2, 3)

not 4 in (1, 2, 3)

# FOR DÖNGÜSÜ; listelerin, demetlerin, stringlerin ve hatta sözlüklerin üzerinde dolaşmamızı sağlayan bir döngü türüdür. Yapısı şu şekildedir;
#    for eleman in ver_yapısı(liste, demet vs):
#      yapılacak işlemler

eleman = i = a = x herhangi bir isim denebilir.
Bu yapı tipi bize şunu şöyler; 
    eleman değişkeni her döngünün başında listenin, demetin vs. her bir elemanına eşit olacak ve her döngüde bu elemanla işlem yapılacak.

liste = [1, 2, 3]
aslında burada bu ELEMAN İN LİSTE şunu anlatıyor;
for döngüsüne başladığımız zaman ilk olarak döngü 1 rakamından başlıyor ve her döngünün başında ELEMANIMIZ BURADAKİ BİR TANE ELEMANA EŞİT OLUYOR.
YANİ ilk döngüde eleman = 1
ikinci döngüde eleman = 2
..... şeklinde ilerliyor.
döngünün yani LİSTE nin dışına çıktığı zamanda DÖNGÜ BİTİYOR.
LİSTENİN DIŞINA ÇIKANA KADAR DEVAM EDİYOR.
for eleman in liste:
  print(eleman)

liste = [1, 2, 3 ]

for eleman in liste:
  print('Eleman', eleman)

# bir listede bulunan elemanların toplamı aldırmak istiyoruz.
# öncelikle toplam adında bir değişken belirleyip bunu sıfıra eşitliyoruz.
# bu toplam değişkeni her bir for döngüsünde toplana toplana ilerleyecek.

toplam = 0
liste = [1, 2, 3, 4]  #ardından bir liste oluşturduk.

# ardından for döngüsünü kuruyoz; yani listedeki her BİR ELEMAN ÜZERİNDE gezinmek istiyorum diyoruz.
# her bir döngüde elemanımız buradaki her bir elemana eşit olduğu için;  her bir döngüde bu elemanları toplam değişkenine eklemek istiyoruz.
#  toplam = toplam + eleman   bunun kolay yazımı ise toplam += eleman

for eleman in liste:
  toplam = toplam + eleman
  print('Toplam: {} eleman : {}'.format(toplam, eleman))
print(toplam)               #bunun cevabı ise 10 olacak, yani en alttaki.

# LİSTE ELEMANLARININ TOPLAMA; Burada bir değişken belirleyeceğiz toplam adında buna ilk etapta 0 değerinin vereceğiz.

toplam = 0
liste = [1, 2, 3, 4]

for eleman in liste:
  toplam += eleman
print('Toplam', toplam)

#  LİSTE ELEMANLARININ TOPLAMA;   DİKKATTTTTT
"""
BUADA PRİNT E GİRİNTİ VERİRSEK; TOPLAM += ELEMANIN ALTINDA KALIRSA YANİ PRİNT BU DURUMDA, SAYILARA HER DEFASINDA BİR EKLEYEREK TOPLAM ALIR.
"""
liste = [1, 2, 3, 4]

toplam = 0
for eleman in liste:
  toplam += eleman
  print('Toplam', toplam)

# LİSTE ELEMANLARINDAN ÇİTF SAYI OLANLARI BULMA;
liste = [1, 2, 3, 4, 5, 6, 7, 8, 9]

for eleman in liste:
  if eleman %2 == 0:
    print(eleman)

s = "Python"    # burada i değişkenini string olarak tanımlanan s değişkeninin içindeki tüm elemanlara teker teker eşit oldu. 
for i in s:
  print(i)

# her bir karakteri 3 ile çarpalım:
# bilindiği üzere stringler bir sayı ile çarpılabiliyordu.
s = "Python" 
for i in s:
  print(i * 3)

s = "Python"
for i in s:
  print(i, end = '-')

# DEMETLER ÜZERİNDE GEZİNMEK
# listelerle mantık aynıdır.
# end seperatörünün normal de fonksiyonu bir alt satıra indirmek ama biz istersek onu değiştirebiliriz. 

demet = (1, 2, 3, 4, 5, 6)
for eleman in demet:
  print(eleman * 3, end = '-')  # her bir i gitti tuple daki elemana eşit oldu, sonra biz dedik ki her bir elemana eşit ol ardında her bir elemanı 3 ile çarp.

# listeler için 2 boyutlu demetler

liste = [(1, 2), (3, 4), (5, 6), (7, 8)]
for eleman in liste:
  print(eleman)  # herbir elemanın tuple olduğunu görebiliyoruz.

# listeler için 2 boyutlu demetler
# burada tuple olan elemanların herbirini ayrı ayrı almak istersek;

liste = [(1, 2), (3, 4), (5, 6), (7, 8)]

for (i, j) in liste:

  print("i: {} j: {}".format(i, j))  # herbir elemanın tuple olduğunu görebiliyoruz.

liste = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]
for (a, b, c) in liste:
  print("a: {}, b: {}, c:{}".format(a, b, c))

liste = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]
for (a, b, c) in liste:
  print(a, b, c)

liste = [(1, 2, 3), (4, 5, 6), (7, 8, 9), (10, 11, 12)]
for (a, b, c) in liste:
  print(a * b * c)

# FOR OLARAK SÖZCÜKLER ÜZERİNDE GEZİNMEK( DİCTİONARY)
# Python sonuçları dict_ keys, dict_values, dict_items olarak vermesine rağmen, bunlar üzerinde liste veya demet üzerinde gezinir gibi for döngüsüyle gezinebiliriz.

sözlük = {'bir':1, 'iki':2, 'üç': 3}
sözlük.keys()

sözlük = {'bir':1, 'iki':2, 'üç': 3}
sözlük.values()

sözlük = {'bir':1, 'iki':2, 'üç': 3}
sözlük.items()

# metodları kullanmadan sözlük üzerinde nasıl geziniriz ?
# aşağıdaki örnektede gördüğümüz üzere gezinemeyiz, metodları kullanmak zorundayız.

sözlük = {'bir':1, 'iki':2, 'üç': 3}

for eleman in sözlük:
  print(eleman)

sözlük = {'bir':1, 'iki':2, 'üç': 3}

for eleman in sözlük.values():
  print(eleman)

sözlük = {'bir':1, 'iki':2, 'üç': 3}

for eleman in sözlük.items():
  print(eleman)

sözlük = {'bir':1, 'iki':2, 'üç': 3}

for i, j in sözlük.items():
  print('Anahtar:{}, Değer:{}'.format(i, j))

sözlük = {'bir':1, 'iki':2, 'üç': 3}

for i, j in sözlük.items():
  print('Anahtar:', i , 'Değer:', j)

liste = [2, 1, 10, 2 ,23, 1, 56, 3]

total = 0
for i in liste:
  if(not(i % 2 == 0)): # çift olmayan sayılar (1, 23, 1, 3)
    total += i     # total = total + i
    print(total)
    
print(total)  # burada tek sayıların toplamını alır çünkü burada ki print for un printi (1+23+1+3)

number_int = 123
number_flt = 1.23
number_new = number_int + number_flt
print("datatype of number_int:", type(number_int))
print("datatype of number_flt:", type(number_flt))

print("Value of number_new:", number_new)
print("datatype of number_new:", type(number_new))

number_int = 123
number_str = '456'
print('Data type of number_int:', type(number_int))
print('Data type of number_str:', type(number_str))
print(number_int + number_str)

number_int = 123
number_str = '456'
print('Data type of number_int:', type(number_int))
print('Data type of number_str before Type Casting:', type(number_str))

number_str = int(number_str)
print('Data type of number_str after Type Casting:', type(number_str))

number_sum = number_int + number_flt

print('Sum of number_int and number_str:', number_sum)
print('Data type of the sum:', type(number_sum))

number = "2020"
number = int(number)
print(number)

string_1 = 'hey nasılsın!'
new_list_1 = list(string_1)
print(new_list_1)

